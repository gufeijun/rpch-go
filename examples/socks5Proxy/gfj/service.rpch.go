// This is code generated by hgen. DO NOT EDIT!!!
// hgen version: v0.1.5
// source: service.gfj

package gfj

import (
    "io"
    rpch "github.com/gufeijun/rpch-go"
)

type DialService interface{
	Dial(string) (stream io.ReadWriter, onFinish func(), err error)
}

func RegisterDialService(impl DialService, svr *rpch.Server) {
	methods := map[string]*rpch.MethodDesc {
        "Dial": rpch.BuildMethodDesc(impl, "Dial", "stream"),
	}
	service := &rpch.Service{
		Impl:    impl,
        Name:    "Dial",
		Methods: methods,
	}
	svr.Register(service)
}

type DialServiceClient struct{
    conn *rpch.Conn
}

func NewDialServiceClient(conn *rpch.Conn) *DialServiceClient {
    return &DialServiceClient{
		conn: conn,
	}
}

func (c *DialServiceClient) Dial(arg1 string) (res io.ReadWriteCloser, err error) {
    resp, err := c.conn.Call("Dial", "Dial",
		&rpch.RequestArg{
            TypeKind: 0,
            TypeName: "string",
            Data:     arg1,
		})
	if resp == nil {
		return
	}
	return resp.(io.ReadWriteCloser),err
}
